name: 'Upload Artifact'
description: 'Send artifact data to a specified API.'

inputs:
  cdp_actions_api_token:
    description: 'The API token for authentication'
    required: true
  name:
    description: 'Artifact name'
    required: false
    default: null
  version:
    description: 'Artifact version'
    required: false
    default: null
  size_kb:
    description: 'Size of the artifact in KB'
    required: false
    default: '0'
  env:
    description: 'Environment for the artifact'
    required: false
    default: null
  type:
    description: 'Artifact type'
    required: false
    default: null
  tags:
    description: 'Custom tags in JSON format'
    required: false
    default: '{}'

runs:
  using: 'composite'
  steps:
    - name: Install dependencies
      run: |
        npm install node-fetch
      shell: bash

    - name: Upload the Artifact Metadata using JavaScript
      run: |
        node -e "
          const fetch = require('node-fetch');
          const { GITHUB_SHA, GITHUB_REF_NAME, GITHUB_WORKFLOW, GITHUB_SERVER_URL, GITHUB_REPOSITORY, GITHUB_RUN_ID } = process.env;

          async function uploadArtifact({
            cdpActionsApiToken,
            name = null,
            version = null,
            sizeKb = '0',
            env = null,
            type = null,
            tags = '{}',
          }) {
            const url = 'https://cdp-next-test.vercel.app/api/v1/artifacts';
            const retries = 6;
            const retryDelay = 10000; // 10 seconds

            const payload = {
              name,
              version,
              sizeKb,
              env,
              type,
              codebaseCommit: GITHUB_SHA,
              repoBranch: GITHUB_REF_NAME,
              workflowTitle: GITHUB_WORKFLOW,
              workflowUrl: \`\${GITHUB_SERVER_URL}/\${GITHUB_REPOSITORY}/actions/runs/\${GITHUB_RUN_ID}\`,
              workflowRunId: GITHUB_RUN_ID,
              githubRepoName: GITHUB_REPOSITORY,
              tags,
            };

            const headers = {
              'Content-Type': 'application/json',
              'CDP-Actions-API-Token': \`Bearer \${cdpActionsApiToken}\`,
            };

            let attempt = 0;
            let response = null;

            while (attempt < retries) {
              try {
                response = await fetch(url, {
                  method: 'POST',
                  headers: headers,
                  body: JSON.stringify(payload),
                });

                if (response.ok) {
                  console.log('Artifact uploaded successfully:', await response.json());
                  return;
                } else {
                  throw new Error(\`Request failed with status \${response.status}\`);
                }
              } catch (error) {
                attempt++;
                console.error(\`Attempt \${attempt} failed: \${error.message}\`);
                if (attempt >= retries) {
                  throw new Error(\`Failed to upload artifact after \${retries} attempts\`);
                }
                console.log(\`Retrying in \${retryDelay / 1000} seconds...\`);
                await new Promise(resolve => setTimeout(resolve, retryDelay)); // Delay before retrying
              }
            }
          }

          uploadArtifact({
            cdpActionsApiToken: process.env['INPUT_CDP_ACTIONS_API_TOKEN'],
            name: process.env['INPUT_NAME'],
            version: process.env['INPUT_VERSION'],
            sizeKb: process.env['INPUT_SIZE_KB'],
            env: process.env['INPUT_ENV'],
            type: process.env['INPUT_TYPE'],
            tags: process.env['INPUT_TAGS'],
          }).catch(error => {
            console.error('Artifact upload failed:', error.message);
            process.exit(1);
          });
        "
      shell: bash